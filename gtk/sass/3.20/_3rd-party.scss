// /******************
//  * Budgie-Desktop *
//  ******************/

// specific ripple-effect for IconTaskList
@keyframes budgie_ripple_effect {
  0% {
    background-image: radial-gradient(circle farthest-corner at center,
                                      gtkalpha($inverted_fg_color, 0.2) 0%,
                                      transparent 0%),
                      image(gtkalpha($inverted_fg_color, 0.2));
  }
  66% {
    background-image: radial-gradient(circle farthest-corner at center,
                                      gtkalpha($inverted_fg_color, 0.2) 100%,
                                      transparent 0%),
                      image(gtkalpha($inverted_fg_color, 0.2));
  }
  100% {
    background-image: radial-gradient(circle farthest-corner at center,
                                      gtkalpha($inverted_fg_color, 0) 100%,
                                      transparent 0%),
                      image(gtkalpha($inverted_fg_color, 0.2));
  }
}

// orientation
$orientation: ((top, bottom),
               (bottom, top));

$full_orientation: ((top, bottom),
                    (bottom, top),
                    (left, right),
                    (right, left));

// specific transition
$budgie_transition: opacity 0.2s $slope_medium,
                    border-color 0.2s $slope_medium,
                    background-color 0.4s $slope_slow,
                    background-image 0.4s $slope_slow,
                    box-shadow 0.4s $slope_slow;

// main container
.budgie-container { background-color: transparent; }

.budgie-panel {
  // panel styling
  // always use dark-color of dark variant
  background-color: $panel_bg_color;
  color: $inverted_fg_color;
  font-weight: 700;

  // used to indicate unread notifications
  .alert { color: $suggested_color; }
}

@each $along_side, $opp_side in $full_orientation {
  // panel shadow styling
  .#{$along_side} .shadow-block {
    background-color: transparent;
    background-image: linear-gradient(to #{$opp_side},
                                      gtkalpha(#000000, 0.23),
                                      gtkalpha(#000000, 0.08),
                                      transparent);
  }
}

// wnck tasklist styling
.budgie-panel button#tasklist-button {
  border: none;
  background: none;
  box-shadow: none; // unset standard wnck styling

  label,
  image { opacity: 0.75; }

  &:hover,
  &:active,
  &:checked {
    box-shadow: none;

    label,
    image { opacity: 1.0; }
  }
}

// icon tasklist styling
box.horizontal.pinned { // drop-target
  &:drop(active) {
    border-color: transparent;
    border-radius: 0;
    background-color: gtkopacity($drop_target_color, 0.2);
    box-shadow: inset 0 0 0 2px $drop_target_color;
  }
}

.budgie-panel {
  button.flat.launcher {
    min-width: $icon_size + 8px;
    min-height: $icon_size + 8px;
    padding: 0;
    border: 2px solid transparent;
    background-image: radial-gradient(circle farthest-corner at center,
                                      gtkalpha($inverted_fg_color, 0) 100%,
                                      transparent 0%),
                      image(gtkalpha($inverted_fg_color, 0));
    background-position: center center;
    transition: $budgie_transition;

    > image { opacity: 0.5; }

    &:hover {
      -gtk-icon-effect: highlight;

      > image { opacity: 0.75; }
    }
    &:active {
      transition: $budgie_transition,
                  background-image 0;
      animation: budgie_ripple_effect 0.3s $slope_slow forwards;

      > image { opacity: 1.0; }
    }
    &:checked {
      background-color: transparent;
      &:hover { -gtk-icon-effect: highlight; }

      > image { opacity: 1.0; }
    }
  }

  .unpinned button.flat.launcher,
  .pinned button.flat.launcher.running {
    &:hover { -gtk-icon-effect: highlight; }

    > image { opacity: 1.0; }
  }
}

// draw underscores
@each $along_side, $opp_side in $orientation {
  .#{$along_side} .budgie-panel {
    button#tasklist-button,
    button.flat.launcher {
      border: 2px solid transparent;
      &:hover {
        border-#{$along_side}: 2px solid gtkalpha($inverted_fg_color, 0.4);
      }
      &:active,
      &:checked {
        border-#{$along_side}: 2px solid $selected_bg_color;
      }
    }
  }
}

// draw underscores and dots
@each $along_side, $_dot in (top, top),
                            (bottom, bottom) {
  .#{$along_side} .budgie-panel {
    .unpinned button.flat.launcher,
    .pinned button.flat.launcher.running {
      border: 2px solid transparent;
      // FIXME: Upstream deformed aspect-ratio to 1:1.1
      border-image: -gtk-scaled(url("assets/running-dot-#{$_dot}.png"),
                                url("assets/running-dot-#{$_dot}@2.png"))
                    2.0 1.8 / 2.0px 1.8px;
      &:hover,
      &:active,
      &:checked {
        border-#{$along_side}: 2px solid $selected_bg_color;
        border-image: none;
      }
    }
  }
}

.budgie-panel .end-region {
  // tweak lateral spacing when 16px icons are used
  > widget > widget {
    > box.horizontal { // 'Stats Indicator'
      > widget > widget > image { // 'bluetooth' and 'sound'
        min-width: $icon_size + 2px;
      }

      > widget > widget > box.horizontal > image { // 'battery'
        min-width: $icon_size + 6px;
      }
    }

    > image { // 'Notification' and 'User Indicator'
      min-width: $icon_size + 4px;
    }
  }
}

// main menu styling
.budgie-panel button.flat.budgie-menu-launcher {
  image {
    // override stock icon with specific one
    min-width: $icon_size + 4px;
    min-height: $icon_size + 4px;
    background-image: url("assets/show-apps.svg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    color: transparent;
    opacity: 0.9;
  }

  &:hover,
  &:active,
  &:checked,
  &:checked:hover {
    image {
      background-image: url("assets/show-apps-active.svg");
      opacity: 1.0;
    }
  }
}

.budgie-menu {
  background-color: $secondary_base_color;

  &.background {
    padding: 2px 0 0; // remove side/bottom padding
    border-style: solid none none; // remove side/bottom borders
  }

  scrolledwindow,
  list,
  row,
  scrollbar { // reset styling
    min-width: 0;
    min-height: 0;
    border: none;
    background: none;
    box-shadow: none;
  }

  row.activatable { // reset background
    background-image: none;
    background-color: $secondary_base_color;
    color: $secondary_fg_color;
    transition: none;

    // FIXME: enlarge vertical spacing with padding of icons
    image { padding: rem(5.3px) 0 rem(6.7px); }

    &:hover,
    &:selected {
      background-image: none;
      background-color: $secondary_base_color;
      // child button node has hover state already
      color: $secondary_fg_color;
      transition: none;
    }
  }

  .categories { // left-paned elements of GtkPopover
    background-color: $secondary_dark_color;
    &:dir(ltr) { border-right: 1px solid $borders_color; }
    &:dir(rtl) { border-left: 1px solid $borders_color; }

    .category-button {
      border-radius: 0; // remove roundness
      &:checked {
        background-image: none;
        background-color: transparent;
        color: $selected_bg_color;
        &:hover { background-color: gtkopacity($selected_bg_color, 0.1); }
        &:disabled {
          color: gtkopacity($selected_bg_color, 0.4);

          label { color: inherit; }
        }
      }

      label { // tweak vertical spacing and font weight
        padding: rem(5.3px, $sw: 1.0) 0 rem(6.7px, $sw: 1.0);
        font-weight: 500;
      }
    }
  }
}

// user-indicator styling
.user-menu {
  border-radius: 2px;
  background-color: $secondary_base_color;

  list,
  row { // reset styling
    border: none;
    background: none;
    box-shadow: none;
  }

  row {
    // stop weird and unhandled ripple-effect
    &.activatable {
      &, .indicator-item {
        &:active,
        &:selected { animation: none; }
      }
    }

    &.activatable {
      background-image: none;
      background-color: $secondary_base_color;
      color: $secondary_fg_color;
      transition: none;

      .indicator-item {
        label,
        image { color: $secondary_fg_color; }
      }

      // FIXME: enlarge vertical spacing with padding of icons
      image { padding: rem(5.3px) 0 rem(6.7px); }

      // use asymmetrical separators
      separator.horizontal {
        min-width: 1px;
        min-height: 1px;

        &:dir(ltr) { border-left: $icon_size * 2 solid transparent; }
        &:dir(rtl) { border-right: $icon_size * 2 solid transparent; }
      }
    }
    &.activatable:hover,
    &.activatable:selected {
      background-image: none;
      background-color: $secondary_base_color;
      color: $secondary_fg_color;
      transition: none;

      .indicator-item {
        label,
        image { color: $secondary_fg_color; }

        &:hover,
        &:active,
        &:checked {
          label,
          image { color: $fg_color; }
        }
      }
    }

    // top-row (user-name and avatar)
    @at-root .user-menu > box.vertical row.activatable:first-child {
      padding-bottom: rem(10.7px); // fix truncated drop-shadow
      outline-offset: 0;
      outline-width: 0;

      .indicator-item {
        background-color: $suggested_color;
        box-shadow: $z-depth-1,
                    inset 0 1px $highlight_color;
        transition-timing-function: $slope_medium;
        transition-property: box-shadow;
        transition-duration: 0.2s;

        &:dir(ltr) { // mask avatar's background
          padding-left: 7px; // non-scaling unit
          background-image: linear-gradient(to right, $borders_color);
          background-position: left center;
          background-repeat: no-repeat;
          background-size: 38px auto; // non-scaling unit
        }
        &:dir(rtl) {
          padding-right: 7px;
          background-image: linear-gradient(to left, $borders_color);
          background-position: right center;
          background-repeat: no-repeat;
          background-size: 38px auto;
        }

        label {
          color: $secondary_selected_fg_color;

          &:dir(ltr) { padding-left: rem(8px); }
          &:dir(rtl) { padding-right: rem(8px); }
        }

        image {
          color: $secondary_selected_fg_color;

          &:first-child { // avatar image
            min-width: 24px;
            min-height: 20px;
            padding-top: rem(6.7px);
            opacity: 0.9;
          }
        }

        &:hover {
          box-shadow: $z-depth-2,
                      inset 0 1px $highlight_color;
          transition-timing-function: $slope_medium;
          transition-property: box-shadow;
          transition-duration: 0.2s;

          label { color: $selected_fg_color; }

          image {
            color: $selected_fg_color;

            &:first-child { opacity: 1.0; }
          }
        }

        label { font-weight: 700; }
      }
    }
  }
}

// raven styling
.raven-frame { // hide frame
  > border { border: none 0 transparent; }
}

.raven {
  padding: 0;
  border: none;
  color: $secondary_fg_color;
  background-color: $secondary_dark_color;

  .raven-header {
    border: none;
    color: $tertiary_fg_color;
    background-color: transparent;
    font-weight: 700;

    &.top { // always use dark variant
      background-color: $inverted_dark_color;
      color: $inverted_fg_color;
      box-shadow: $z-depth-2;

      button.image-button,
      button.text-button {
        color: $inverted_secondary_fg_color;
        &:hover,
        &:active,
        &:checked { color: $inverted_fg_color; }
        &:disabled { color: $insensitive_inverted_fg_color; }
      }

      > image { // gear icon in settings-view
        &:dir(ltr) { margin-left: 4px; }
        &:dir(rtl) { margin-right: 4px; }
      }
    }

    // reduce the gap between child elements
    &:not(.top):not(.bottom) { margin-top: rem(-10.7px); }

    // last-child is constructed without header-label
    &:not(.top):not(.bottom):not(:last-child) {
      > label,
      > box > label,
      > box > image { color: $tertiary_fg_color; }
    }
  }

  > stack > box.vertical > stack > stack > box.vertical > .raven-header {
    // revert to original top-margin for 'AppletSettings'
    margin-top: 0;
  }

  .raven-background {
    border-width: 1px 0 0;
    border-style: solid none none;
    border-color: $borders_color;
    background-color: transparent;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);
  }

  .powerstrip {
    background-color: $secondary_dark_color;
    background-image: linear-gradient(to top,
                      if($variant == 'light',
                        $dark_color,
                        mix($dark_color, $secondary_dark_color, 50%)) 50%,
                      if($variant == 'light',
                        gtkalpha($top_edge_borders_color, 0.005),
                        gtkalpha($solid_dark_borders_color, 0.02)) calc(50% + 1px),
                      transparent 1px,
                      transparent);
    box-shadow: none;

    button.flat.image-button {
      @extend %button_normal;
      margin: rem(2px) rem(8px);
      padding: rem(5.3px);
      color: $secondary_selected_fg_color;
      background-color: $suggested_color;
      &:hover {
        @extend %button_hover;
        color: $selected_fg_color;
      }
      &:active {
        @extend %button_active;
        color: $selected_fg_color;
        background-color: $selected_bg_color;
      }
      &:checked {
        @extend %button_checked;
        color: $inverted_fg_color;
        background-color: mix($selected_fg_color, $suggested_color, 20%);
      }
      &:disabled {
        @include button(flat-insensitive, $secondary_dark_color,
                                          $insensitive_inverted_fg_color);
      }
    }
  }

  .option-subtitle {
    color: $insensitive_secondary_fg_color;
    font-size: 90%;
  }

  scrolledwindow,
  list { background: transparent; }

  row.activatable {
    background-color: transparent;
    &:hover { color: $fg_color; }
    &:selected {
      &, label {
        color: $selected_bg_color;
      }
      &:hover { background-color: gtkopacity($selected_bg_color, 0.1); }
    }

    separator {
      min-height: 1px;
      min-width: 1px;
      margin: 0 rem(5.3px);
      border: none;
      color: transparent;
      background-color: transparent;
      background-image: linear-gradient(to bottom,
                                        gtkopacity($fg_color, 0.1));
      background-position: center;
      background-repeat: no-repeat;
      background-size: auto 1px;
    }
  }

  // use flat-style
  button.image-button {
    @include button(flat-normal);
    &:hover {
      @include button(flat-hover);
      -gtk-icon-effect: highlight;
      }
    &:active { @include button(flat-active); }
    &:disabled { @include button(flat-insensitive); }
    &:checked { @include button(flat-checked); }
    &:checked:disabled { @include button(flat-checked-insensitive); }
  }

  .raven-header {
    > .linked { margin: 0 rem(10.7px); }

    > button.image-button { // 'gear' button
      min-width: $widget_size - if($ref_weight < 1.0, 10.7px, 5.3px);
      min-height: $widget_size - if($ref_weight < 1.0, 10.7px, 5.3px);
      padding: 0;
    }

    > button.text-button { // 'exit' button
      min-width: $widget_size - if($ref_weight < 1.0, 2.7px, 0);
      min-height: $widget_size - if($ref_weight < 1.0, 10.7px, 5.3px);
      padding: 0;
      background-color: $suggested_color;
      &:hover {
        &, label { color: $selected_fg_color; }
      }
      &:active {
        background-color: $selected_bg_color;

        &, label { color: $selected_fg_color; }
      }
      &:checked {
        background-color: mix($selected_fg_color, $suggested_color, 20%);

        &, label { color: $secondary_selected_fg_color; }
      }
      &:disabled {
        @include button(flat-insensitive, $track_color, $insensitive_fg_color);
      }

      label {
        padding-bottom: rem(1.3px);
        color: $secondary_selected_fg_color;
      }
    }

    button.flat.expander-button { // expander arrow buttons
      min-width: $icon_size;
      min-height: $icon_size;
      padding: rem(8px);
      border-radius: 100px;
      -gtk-outline-radius: 100px;
      color: $tertiary_fg_color;
      &:hover,
      &:active { color: $fg_color; }

      &:dir(ltr) { margin-right: rem(2.7px); }
      &:dir(rtl) { margin-left: rem(2.7px); }
    }

    button.flat.image-button.primary-control { // close button in MPRIS
      min-width: $icon_size;
      min-height: $icon_size;
      padding: rem(8px);
      color: gtkopacity($destructive_color, 0.75);
      &:hover,
      &:active,
      &:checked { color: $destructive_color; }
      &:disabled { color: gtkopacity($destructive_color, 0.4); }
    }

    // reduce height of scale node
    scale { padding: rem(10px - 2px, $sw: 1.0); }
  }

  stackswitcher.linked > button.text-button.radio { // switcher buttons
    min-height: $widget_size - if($ref_weight < 1.0, 10.7px, 5.3px);
    padding-top: 0;
    padding-bottom: 0;

    label { padding-bottom: rem(1.3px); }
  }

  calendar {
    border: none;
    background-color: transparent;
  }

  // notification list
  stack > box.vertical > stack > box.vertical > .raven-background {
    > viewport.frame > list > row.activatable {
      padding-bottom: 4px;
      border-bottom: 1px solid $borders_color;
      &:selected {
        &, &:focus {
          background-color: gtkopacity($selected_bg_color, 0.2);
          &:dir(ltr) { box-shadow: inset 4px 0 $selected_bg_color; }
          &:dir(rtl) { box-shadow: inset -4px 0 $selected_bg_color; }

          > grid > label {
            &, &.dim-label {
              color: $fg_color;
              opacity: 1.0;
            }
          }

          > grid > image { color: $fg_color; }
        }
      }
    }
  }
}

// MPRIS Applet
.raven-mpris {
  border: none;
  color: $fg_color;
  background-color: gtkopacity($dark_color, 0.9);

  button.image-button { padding: rem(8px); }
}

// clock-applet styling
.budgie-panel {
  // shrink label
  > box widget > widget > label {
    margin-top: rem(-0.7px, $sw: 1.0);
    padding: 1.3px 2px 0;
    font-size: 80%;
  }
}

// popover of sound-indicator styling
.budgie-container.top,
.budgie-container.bottom {
  > popover.background > box.vertical > button.flat.image-button {
    min-width: rem($widget_size, $sw: 1.0);
    min-height: rem($widget_size, $sw: 1.0);
    margin: rem(2.7px, $sw: 1.0) 0;
    padding: 0;

    &:first-child { // '+' button
      &:hover {
        background: none;
        color: $success_color;
        animation: volume_hover 0.2s linear forwards;
      }
    }

    &:last-child { // '-' button
      &:hover {
        background: none;
        color: $error_color;
        animation: volume_hover 0.2s linear forwards;
      }
    }
  }
}

// places-indicator styling
popover.places-menu {
  &.background {
    padding: 2px 0 0; // remove side/bottom padding
    border-style: solid none none; // remove side/bottom borders
  }

  .places-section-header {
    padding: rem(4px);

    > label {
      color: $secondary_fg_color;
      font-weight: 700;
    }

    > image {
      padding-left: 4px;
      color: $accent_color;

      &:dir(rtl) { padding-right: 4px; }
    }

    button.image-button {
      margin: rem(2.7px);
      &:not(:active) {
        transition: opacity 0.2s $slope_medium,
                    border-color 0.2s $slope_medium,
                    background-color 0.2s $slope_slow,
                    background-image 0.2s $slope_slow,
                    box-shadow 0.2s $slope_slow;
      }
    }
  }

  box.vertical > revealer {
    > list { // drop-down list
      border-width: 1px 0 1px;
      border-style: solid none solid;
      border-color: $borders_color transparent $borders_color;
      background-color: $secondary_dark_color;
      box-shadow: if($variant == 'light', $inline-shadow-light,
                                          $inline-shadow-dark);
    }

    infobar.message-bar {
      border-radius: 2px 2px 0 0;
    }
  }

  list {
    background-color: transparent;

    > row.activatable {
      transition: none;
      &:hover,
      &:active {
        color: $fg_color;

        button.text-button.name-button { // = 'toolbutton > button'
          &,
          &:hover,
          &:active {
            color: $fg_color;
            background-color: transparent;
            background-image: none;
            transition: none;
            animation: none;
          }
          &:active { animation: list_ripple_effect 0.2s $slope_slow forwards; }
        }
      }

      button.image-button { // revive button transitions
        &:not(:active) {
          transition: opacity 0.2s $slope_medium,
                      border-color 0.2s $slope_medium,
                      background-color 0.2s $slope_slow,
                      background-image 0.2s $slope_slow,
                      box-shadow 0.2s $slope_slow;
        }
      }

      button.text-button.name-button {
        > box.horizontal { // adjust spacing
          > image,
          > spinner { margin: rem(5.3px) 0; }

          > label { padding-bottom: rem(1.3px, $sw: 1.0); }
        }
      }

      button.unmount-button {
        margin: rem(1.3px) rem(5.3px);
        padding: rem(4px);
      }
    }

    label.dim-label {
      font-size: 90%;
      font-weight: 700;
    }
  }

  box.unlock-area {
    border-width: 1px 0 1px;
    border-style: solid none solid;
    border-color: $borders_color;
    background-color: $secondary_dark_color;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);

    entry { // where is the combo node?
      min-height: $icon_size;
      min-width: $icon_size;
      margin: rem(1.3px) rem(5.3px);
      padding: rem(4px);
    }

    button {
      min-height: $icon_size;
      min-width: $icon_size;
      margin: rem(1.3px) rem(5.3px);
      padding: rem(4px);
      border-radius: 2px; // revert to square button
      -gtk-outline-radius: 2px;
    }
  }
}

// keyboard indicator applet
widget.keyboard-indicator >  widget > box.horizontal {
  > widget > image {
    margin-top: rem(-0.7px, $sw: 1.0);
    &:dir(ltr) { padding: 2.7px 0 0 3px; }
    &:dir(rtl) { padding: 2.7px 3px 0 0; }
  }

  > stack > widget.keyboard-label > label {
    margin-top: rem(-0.7px, $sw: 1.0);
    &:dir(ltr) { padding: 1.3px 3px rem(1.3px, $sw: 1.0) 0; }
    &:dir(rtl) { padding: 1.3px 0 rem(1.3px, $sw: 1.0) 3px; }
  }
}

// separator applet
.budgie-panel > box > widget > separator {
  // borders_color -> track_color
  background-color: gtkopacity($inverted_fg_color, 0.2);
}

// workspace-switcher applet
wnck-pager {
  .top & {
    &:hover { box-shadow: inset 0 2px gtkalpha($inverted_fg_color, 0.4); }
    &:selected { box-shadow: inset 0 2px $selected_bg_color; }
  }

  .bottom & {
    &:hover { box-shadow: inset 0 -2px gtkalpha($inverted_fg_color, 0.4); }
    &:selected { box-shadow: inset 0 -2px $selected_bg_color; }
  }
}

// notifications
.budgie-notification-window,
.budgie-osd-window {
  border-radius: 2px;
  background-color: transparent;

  // draw actual backgrounds
  .drop-shadow { background-color: gtkopacity($inverted_dark_color, 0.9); }
}

.budgie-notification,
.budgie-osd {
  // always use dark-variant
  color: $inverted_fg_color;
  background-color: transparent;

  .notification-title {
    color: $inverted_secondary_fg_color;
    font-size: 110%;
    font-weight: 500;
  }

  .notification-body {
    color: $inverted_fg_color;
    font-size: 90%;
    font-weight: 400;
  }

  .budgie-osd-text {
    color: $inverted_fg_color;
    font-size: 110%;
  }

  progressbar { // mimic level-bar
    min-height: 4px;
    padding: 2px;
    border-radius: 2px;
    background-color: $inverted_dark_color;
    box-shadow: $z-depth-1;

    trough {
      color: $inverted_fg_color;
      background-color: $track_color;
    }

    progress { background-color: $success_color; }
  }
}

.budgie-notification,
.budgie-osd,
.drop-shadow {
  button,
  .linked > button { // OSD-style buttons
    border-image: none; // hide underlines
    color: $inverted_secondary_accent_label_color;
    &:hover,
    &:active,
    &:checked { color: $inverted_accent_label_color; }
    &:disabled { color: gtkopacity($inverted_accent_label_color, 0.4); }
  }
}

// alt-tab apps switcher styling
$min_child_width: 60px;
$min_spacing: 6px;
$max_childs: 8;

window.budgie-switcher-window {
  border-radius: 2px;
  background-color: transparent;

  // draw actual backgrounds and shadows
  .drop-shadow {
    margin: 8px 8px 12px; // reserve area for shadows
    border-radius: 2px;
    background-color: gtkopacity($inverted_dark_color, 0.9);
    box-shadow: $z-depth-4; // raise to level-4

    label.budgie-switcher-title { // bottom label for app titles
      // default max_children_per_line = 8
      // keep the minimum width defined by tabswitcher.ui
      min-width: ($min_child_width + $min_spacing) * $max_childs
                 + $min_spacing * ($max_childs - 1);
      color: $inverted_accent_label_color;
      font-weight: 500;
      &:dir(ltr) { padding: 0 0 3px 6px; }
      &:dir(rtl) { padding: 0 6px 3px 0; }
    }
  }

  flowbox > flowboxchild { // icon-tiles
    margin: $min_spacing / 2;
    border-radius: 2px;
    -gtk-outline-radius: 2px;
    color: $inverted_secondary_accent_label_color;
    background-color: transparent;
    &:hover,
    &:active {
      background-color: gtkopacity($accent_color, 0.1);
      color: $inverted_accent_label_color;
    }
    &:selected { // use the same values with Gnome-Shell
      background-color: gtkopacity($accent_color, 0.25);
      color: $inverted_accent_label_color;
      -gtk-icon-effect: highlight;
      &:disabled {
        background-color: gtkopacity($inverted_fg_color, 0.1);
        -gtk-icon-effect: dim;

        &, label { color: $insensitive_inverted_fg_color; }
      }
    }
  }
}

// an internal of the parent switcher-window
.budgie-switcher {
}

// run-dialog styling
.background.csd.budgie-run-dialog {
  border-radius: 2px;
  border: none;
  background-color: gtkopacity($inverted_dark_color, 0.9);

  scrolledwindow {
    border-image: none; // remove underline indicator
    background-color: transparent;

    list {
      background-color: transparent;

      row.activatable {
        background-color: transparent;
        color: $inverted_secondary_fg_color;
        transition: none;

        .dim-label {
          color: $inverted_secondary_fg_color;
          opacity: 1.0;
        }

        &:hover,
        &:active {
          color: $inverted_fg_color;

          .dim-label {
            color: $inverted_fg_color;
            opacity: 1.0;
          }
        }
      }
    }
  }

  box > box {
    entry {
      min-height: rem($widget_size, $sw: 1.0);
      color: $inverted_fg_color;
      caret-color: $inverted_fg_color;
      font-size: 110%;
      &:focus {
        color: $selected_fg_color;
        caret-color: $selected_fg_color;
      }
      &:disabled { color: $insensitive_inverted_fg_color; }

      image {
        &:not(:hover):not(:active) { color: $inverted_fg_color; }
        &:active { color: $selected_bg_color; }
        &:disabled { color: $insensitive_inverted_fg_color; }
      }
    }
  }

  scrollbar {
    border: none;
    background: none;

    slider {
      background-color: gtkopacity($inverted_tertiary_fg_color, 0.55);
      &:hover {
        background-color: gtkopacity($inverted_secondary_fg_color, 0.55);
      }
      &:active { background-color: $inverted_fg_color; }
      &:disabled { opacity: 0.4; }
    }
  }
}

// session-dialog and polkit-dialog styling
.budgie-session-dialog,
.budgie-polkit-dialog {
  border-radius: 2px;
  border-width: 0;
  // Always use dark-color of dark variant
  background-color: gtkopacity($inverted_dark_color, 0.9);
  color: $inverted_fg_color;
  font-weight: 700;

  decoration { // composite with drop-shadows
    border-radius: 2px;
    box-shadow: $z-depth-4;
    &:backdrop {
      box-shadow: $z-depth-2-backdrop;
      transition: none;
    }
  }

  entry {
    &, &:focus {
      color: $inverted_fg_color;
      caret-color: $inverted_fg_color;
    }
    &:disabled { color: $insensitive_inverted_fg_color; }
  }

  button,
  .linked > button {
    @extend %button_flat_normal;
    padding: rem(9.3px) rem(13.3px) rem(10.7px);
    border: 2px solid transparent;
    border-radius: 0;
    color: $inverted_secondary_accent_label_color;
    background-color: transparent;
    &:hover {
      @extend %button_flat_hover;
      background-color: transparent;
      color: $inverted_accent_label_color;
    }
    &:active {
      @extend %button_flat_active;
      background-color: transparent;
      color: $inverted_accent_label_color;
    }
    &:checked {
      @extend %button_flat_checked;
      background-color: transparent;
      color: $inverted_secondary_accent_label_color;
    }
    &:disabled { @include button(flat-insensitive); }

    &:first-child {
      border-radius: 0 0 0 2px;
      border-right-width: 0;
    }
    &:last-child {
      border-radius: 0 0 2px 0;
      border-left-width: 0;
    }
  }
}

// polkit-dialog specific styling
.budgie-polkit-dialog {
  .message { color: $inverted_secondary_fg_color; }

  .failure {
    color: $error_color;
    font-weight: 700;
  }
}

// raven-controller applet
.budgie-panel > box.horizontal {
  widget > button.flat {
    // use non-scaling units
    min-width: $icon_size + 8px;
    min-height: $icon_size + 8px;
    padding: 4px 0;
    border-radius: 0;
    color: $inverted_fg_color;
    &:hover {
      color: $selected_fg_color;
      background: none;
      background-image: none;

      .top & { box-shadow: inset 0 2px gtkalpha($inverted_fg_color, 0.4); }
      .bottom & { box-shadow: inset 0 -2px gtkalpha($inverted_fg_color, 0.4); }
    }
    &:active,
    &:checked {
      color: $selected_fg_color;
      background: none;
      background-image: none;

      .top & { box-shadow: inset 0 2px $selected_bg_color; }
      .bottom & { box-shadow: inset 0 -2px $selected_bg_color; }
    }
  }
}

// misc settings
.drop-shadow {
  background-color: transparent;
  background-image: none;
  box-shadow: $z-depth-2;
}


// /*****************
//  * Unity-Desktop *
//  *****************/

// window decorations
UnityDecoration {
  -UnityDecoration-extents: 24px 0 0 0;
  -UnityDecoration-input-extents: 8px;

  -UnityDecoration-shadow-offset-x: 0;
  -UnityDecoration-shadow-offset-y: 3.5px;
  -UnityDecoration-active-shadow-color: rgba(0, 0, 0, 0.73);
  -UnityDecoration-active-shadow-radius: 17px;
  -UnityDecoration-inactive-shadow-color: rgba(0, 0, 0, 0.25);
  -UnityDecoration-inactive-shadow-radius: 11px;

  -UnityDecoration-glow-size: 10px;
  -UnityDecoration-glow-color: $selected_bg_color;

  -UnityDecoration-title-indent: 16px;
  -UnityDecoration-title-fade: 32px;
  -UnityDecoration-title-alignment: 0.0;

  .top {
    padding: 1px 6px 0 6px;
    border: 0 none transparent;
    border-radius: 2px 2px 0 0;
    background-image: linear-gradient(to bottom, $inverted_dark_color);
    // The foreground color will be used to paint the text
    color: $inverted_fg_color;
    box-shadow: inset 0 1px $inverted_dark_color;
    &:hover { // for L.I.M's selected menuitem
      color: $selected_fg_color;
      box-shadow: inset 0 -2px $selected_bg_color;
    }
    &:backdrop { color: $insensitive_inverted_fg_color; }
  }

  .left,
  .right,
  .bottom {
    &, &:backdrop {
      border-width: 1px;
      border-style: solid;
      border-color: $borders_color;
      background-image: none;
    }
  }
}

// panel styling
UnityPanelWidget,
.unity-panel {
  &, &:backdrop {
    border-bottom: 1px solid $panel_bg_color;
    color: $inverted_fg_color;
    background-image: linear-gradient(to bottom, $panel_bg_color);
    box-shadow: none;
  }
}

.unity-panel {
  &.menuitem,
  .menuitem { padding: 1px 1px 0; }

  &.menubar,
  .menubar {
    background-color: transparent;
    background-image: none;
    box-shadow: none;

    &.menuitem,
    .menuitem * {
      padding: 0 6px;
      border-radius: 0;
      border-bottom: none;
      color: $inverted_fg_color;
      background-color: transparent;
      &:hover {
        color: $selected_fg_color;
        box-shadow: inset 0 2px $selected_bg_color;
      }
    }
  }
}


// /************************
//  * Unity-Control-Center *
//  ************************/

.background:not(.csd):not(.solid-csd) > box.vertical > notebook.frame {
  // hide unwanted frames
  border: 0 none transparent;

  > stack > scrolledwindow > viewport > box.vertical > frame > box.vertical {
    // reset $base_color;
    iconview.view {
      background-color: transparent;
      &:selected { background-color: $selected_bg_color; }
    }
  }
}


// /***********************
//  * Lightdm-Gtk-Greeter *
//  ***********************/

.lightdm-gtk-greeter {
  // top-panel styling
  #panel_window {
    background-image: image($panel_bg_color);
    color: $inverted_fg_color;
    box-shadow: none;
    font-weight: 700;
    text-shadow: none;

    &, &.background,
    > * > * { background-color: transparent; } // FIXME: ugly wildcard

    menubar {
      @extend .gnome-panel-menu-bar;
      background-color: transparent;
      color: $inverted_fg_color;

      label,
      image {
        padding: 0 rem(6.7px, $sw: 1.0);
        color: $inverted_fg_color;
      }

      &:hover {
        color: $selected_fg_color;
        box-shadow: inset 0 2px $selected_bg_color;

        label,
        image { color: $selected_fg_color; }
      }

      // flip underline-indicator vertically
      > menuitem {
        padding: rem(5.3px, $sw: 1.0) 0 rem(6.7px, $sw: 1.0);
        background-color: transparent;
        &:hover { box-shadow: inset 0 2px $selected_bg_color; }
      }

      menu {
        menuitem {
          padding: rem(5.3px) rem(8px) rem(6.7px);
          font-weight: 400;
          text-shadow: none;

          // override above hacks
          &, label { color: $secondary_fg_color; }
          &:hover,
          &:hover label { color: $fg_color; }
          &:disabled,
          &:disabled label { color: $insensitive_fg_color; }
        }
      }
    }
  }

  // main container
  #login_window,
  #shutdown_dialog,
  #restart_dialog {
    @extend messagedialog;
    border: 1px solid $borders_color;
    border-radius: 2px;
    box-shadow: none;

    button {
      padding: rem(9.3px, $sw: 1.0) rem(13.3px, $sw: 1.0) rem(10.7px, $sw: 1.0);
      color: $inverted_secondary_fg_color;
      &:hover,
      &:active { color: $inverted_fg_color; }
      &:disabled { color: $insensitive_inverted_fg_color; }

      &#login_button { @extend button.suggested-action; }

      &#restart_button,
      &#shutdown_button { @extend button.destructive-action; }

      &.combo {
        min-height: rem($widget_size);
        padding: 0 if($ref_weight < 1.0, 4px, 8px);
        border-image: -gtk-gradient(radial,
                                    center bottom, 0,
                                    center bottom, 0.5,
                                    to($track_color),
                                    to(transparent))
                                    0 0 1 / 0 0 1px;
        color: $inverted_fg_color;
        font-weight: 500;
        &:hover,
        &:active {
          border-image: -gtk-gradient(radial,
                                      center bottom, 0,
                                      center bottom, 0.5,
                                      to($selected_bg_color),
                                      to(transparent))
                                      0 0 2 / 0 0 2px;
          color: $selected_fg_color;
        }
        &:disabled,
        &:checked:disabled {
          border-image: -gtk-gradient(radial,
                                      center bottom, 0,
                                      center bottom, 0.5,
                                      to($track_color),
                                      to(transparent))
                                      0 0 1 / 0 0 1px;
          color: $insensitive_inverted_fg_color;
        }
      }
    }

    entry { // prevent junmping when showing CapsLock warning
      min-height: rem($widget_size);
      padding: 0 if($ref_weight < 1.0, 4px / 2, 8px / 2);
      font-family: monospace;
    }

    infobar.error { // notification revealer
      margin: 0 4px; // prevent unwanted overflow
      border: none;
      background-color: transparent;
      color: $error_color;
      font-weight: 700;
      font-size: 110%;
      transition: none; // transition causes visual glitches
    }
  }

  #login_window {
  }

  #content_frame { padding-bottom: 14px; }

  #buttonbox_frame {
    padding-top: 8px; // reserve gap between infobar and buttonbox
  }
}


// /************
//  * Corebird *
//  ************/

// use normal foreground colour
stack button.profile-button {
  &:checked { color: $fg_color; }
}

headerbar.titlebar box {
  button.toggle.account-button { // left-most account-button
    min-width: $icon_size;
    min-height: $icon_size;
    // it doesn't work
    padding: rem(6.7px) rem(10.7px) rem(6.7px);
    // revert to square button since we can't make perfect circle button
    border-radius: 2px;
    -gtk-outline-radius: 2px;

    // it doesn't work
    .avatar-round { border-color: transparent; }
  }

  button.image-button.toggle { // tweet button
    min-width: $icon_size * 1.5;
    min-height: $icon_size * 1.5;
    padding: if($ref_weight < 1.0,
             rem(($widget_size - $icon_size * 1.5 - 2px) / 2),
             rem(($widget_size - $icon_size * 1.5) / 2));
  }
}

.background.csd box.vertical > stack > scrolledwindow,
.background.solid-csd box.vertical > stack > scrolledwindow {
  list > row.activatable.tweet {
    // speed-up scrolling
    background-image: none;
    &:hover {
      background-image: none;
      background-color: gtkalpha(currentColor, 0.05);
    }

    &,
    widget.inline-media,
    button.text-only-button {
      transition: none;
      &:active { animation: none; }

      label { transition: none; }
    }

    // dim 'quotes' inside the tweets (labels only)
    grid.horizontal.quote label {
      opacity: 0.75;

      &.dim-label { opacity: 0.4; }
    }

    // use asymmetrical separators
    &:dir(ltr) {
      border-image: linear-gradient(to right,
                                    transparent 72px,
                                    $borders_color 72px,
                                    $borders_color)
                                    0 0 1 / 0 0 1px;
    }
    &:dir(rtl) {
      border-image: linear-gradient(to left,
                                    transparent 72px,
                                    $borders_color 72px,
                                    $borders_color)
                                    0 0 1 / 0 0 1px;
    }
  }
}

scrolledwindow > viewport.frame > list {
  > stack > box.vertical > button.text-button { // 'Retry' button
    margin-bottom: rem(13.3px, $sw: 1.0);
  }
}

// top-right 'close' button on attached images
window.background > grid.horizontal > widget,
window.background > stack > grid.horizontal > widget {
  > button.close-button.image-button {
    // disabled box-shadow by hard-coded style.css
    @extend button.destructive-action;
  }
}

// popup window for media
window.background:not(.csd):not(.solid-csd):not(.unity-csd) > frame {
  > scrolledwindow {
    > scrollbar { // always draw troughs
      background-color: gtkopacity($base_color, 0.55);

      &.overlay-indicator {
        &:not(.dragging):not(.hovering) {
          background-color: gtkopacity($base_color, 0.55);
        }
      }
    }
  }
}

window.background > popover.background > frame > list > row.activatable {
  > grid.horizontal > button.flat.image-button {
    // revive transitions
    transition-property: opacity,
                         border-color,
                         border-image,
                         background-color,
                         background-image,
                         box-shadow,
                         icon-shadow;
    transition-timing-function: $slope_slow;
    transition-duration: 0.2s;
  }
}


// /********
//  * Nemo *
//  ********/

.nemo-desktop.nemo-canvas-item {
  @extend .nautilus-desktop.nautilus-canvas-item;
}

.nemo-window {
  // workaround for invisible text in rename entry (Eeleditable.entry)
  .nemo-window-pane scrolledwindow widget > widget.entry {
    &, &:focus {
      transition: none;

      &:selected { // FIXME: selection node doesn't work?
        color: $selected_fg_color;
        background-color: $selected_bg_color;
      }
    }
  }

  infobar.error { // Administrative privileges
    label {
      font-size: 110%;
      font-weight: 700;
    }
  }

  // main tool-bar styling
  grid > box > box > toolbar.primary-toolbar {
    // draw bottom border and shadows
    border-bottom: 1px solid $borders_color;
    box-shadow: if($variant == 'light', $toolbar-shadow-light,
                                        $toolbar-shadow-dark);

    > button.flat.toggle { // 'back/forward'?
      min-height: $icon_size * 2.0;
      min-width: $icon_size * 2.0;
      padding: 0;
      border-radius: 2px;
      -gtk-outline-radius: 2px;
    }

    .linked.raised > button,
    .raised > button {
      // path-bar widget buttons
      &, &.text-button.toggle {
        min-height: rem(26.7px);
        min-width: rem(26.7px);
        padding-top: 0;
        padding-bottom: 0;
        border-radius: 2px;
        -gtk-outline-radius: 2px;

        > widget { padding: rem(4px) 0; } // GtkArrow?
      }

      &.image-button,
      &.image-button.toggle {
        min-height: $icon_size * 2.0;
        min-width: $icon_size * 2.0;
        padding: 0;
        border-radius: 2px;
        -gtk-outline-radius: 2px;
      }
    }

    // optional buttons
    .raised:not(.linked) > button {
      &:not(.text-button):not(.toggle) {
        min-height: $icon_size * 2.0;
        min-width: $icon_size * 2.0;
        padding: 0;
        border-radius: 2px;
        -gtk-outline-radius: 2px;
      }
    }

    // shrink height of entry node
    box.horizontal > widget > entry,
    button.text-button {
      padding-top: rem(5.3px);
      padding-bottom: rem(6.7px);
    }
  }

  // tweak notebook colour
  grid > paned > box > paned > box > notebook {
    &, > stack:not(:only-child) {
      background-color: $base_color;
    }
  }

  // remove double-border
  grid.vertical > paned.horizontal > box.vertical {
    > scrolledwindow.frame {
      border-width: 0;
    }
  }

  // force using flat-style on bottom bar
  grid.vertical > widget {
    background-color: $secondary_dark_color;
    box-shadow: if($variant=='light', $inline-shadow-light,
                                      $inline-shadow-dark);

    > box { padding: rem(2.7px); }

    > box > button.image-button {
      @extend %button_flat_normal;
      min-width: rem(13.3px);
      min-height: rem(29.3px);
      border-radius: 2px;
      -gtk-outline-radius: 2px;
      padding: 0 rem(10px) 0;
      border-image: -gtk-gradient(radial,
                                  center bottom, 0,
                                  center bottom, 0.001,
                                  to($track_color),
                                  to(transparent))
                                  0 0 0 / 0 0 0px;
      background-color: transparent;
      color: $secondary_fg_color;
      &:hover {
        @extend %button_flat_hover;
        border-image: none;
        background-color: transparent;
        color: $fg_color;
      }
      &:checked {
        @extend %button_flat_checked;
        border-image: -gtk-gradient(radial,
                                    center bottom, 0,
                                    center bottom, 0.5,
                                    to($selected_bg_color),
                                    to(transparent))
                                    0 0 2 / 0 0 2px;
        background-color: transparent;
        color: $fg_color;
        &:disabled {
          @extend %button_flat_checked_disabled;
          border-image: none;
          background-color: transparent;
          color: $insensitive_fg_color;
        }
      }
      &:disabled {
        @extend %button_flat_disabled;
        border-image: none;
        background-color: transparent;
        color: $insensitive_secondary_fg_color;
      }
    }

    box > separator.vertical { // remove separator
      min-width: 0;
      color: transparent;
      background-color: transparent;
    }
  }
}


// /************
//  * Lollypop *
//  ************/

window > headerbar > widget > box.horizontal {
  > grid.horizontal > button.toggle.image-button {
    min-width: $icon_size * 1.5;
    min-height: $icon_size * 1.5;
    padding: if($ref_weight < 1.0,
             rem(($widget_size - $icon_size * 1.5 - 2px) / 2),
             rem(($widget_size - $icon_size * 1.5) / 2));
  }

  > button.image-button {
    min-width: $icon_size * 1.5;
    min-height: $icon_size * 1.5;
    margin: -2px 0;
    padding: if($ref_weight < 1.0,
             rem(($widget_size - $icon_size * 1.5 - 2px) / 2),
             rem(($widget_size - $icon_size * 1.5) / 2));
  }
}

// left-pane styling
window.background > grid.vertical > stack > paned.horizontal > widget {
  grid.vertical > scrolledwindow {
    background-color: $secondary_dark_color;

    &:dir(ltr) {
      box-shadow: if($variant == 'light', $sidebar-light-ltr,
                                          $sidebar-dark-ltr);
    }
    &:dir(rtl) {
      box-shadow: if($variant == 'light', $sidebar-light-rtl,
                                          $sidebar-dark-rtl);
    }

    > treeview.view.sidebar {
      background-color: transparent;
      font-weight: 500;

      // FIXME: hard-coded?
      // separator { color: $borders_color; }
    }
  }
}

// playlists styling
window.background > grid.vertical > stack > paned.horizontal {
  > paned.horizontal > grid grid > grid {
    button.flat.image-button { // back to square button
      &, &.toggle {
        border-radius: 2px;
        -gtk-outline-radius: 2px;
      }
    }
  }

  .trackrow {
    &, &playing {
      // lollypop can not understand outer marigns
      button.image-button { margin: 0; }
    }
  }

  .track-menu-button { // back to square button
    border-radius: 2px;
    -gtk-outline-radius: 2px;
  }
}


// /***************************
//  * Cinnamon-Control-Center *
//  ***************************/

window.background:not(.csd) > box.vertical > stack {
  > scrolledwindow {
    iconview {
      &, &.view {
        background-color: transparent;
        &:selected {
          color: $selected_fg_color;
          background-color: $selected_bg_color;

          label { color: $selected_fg_color; }
        }
      }
    }

    box.vertical > toolbar {
      border: none;
      background-color: $bg_color;
      box-shadow: none;

      *:not(button) > label {
        padding: rem(5.3px, $sw: 1.0);
        color: $tertiary_fg_color;
      }
    }

    box.vertical > list {
      &, > row {
        background-image: none;
        background-color: $base_color;
        &:hover,
        &:active { // unset hover/active effects
          background-image: none;
          background-color: transparent;
          animation: none;
        }
        &:selected {
          background-color: $selected_bg_color;
          color: $selected_fg_color;
        }
      }
    }
  }
}


// /************************
//  * Cinnamon-Screensaver *
//  ************************/

.csstage {
  .unlockbox {
    color: $inverted_fg_color;
    font-size: 110%;
    font-weight: 400;
  }

  .clock {
    color: $inverted_fg_color;
    font-size: rem(112px, $sw: 1.0);
    font-weight: 300;
  }

  .toppanel {
    border: none;
    color: $inverted_fg_color;
    background-color: transparent;
  }

  .audiopanel,
  .infopanel { // OSDs placed at top-left/right corners
    border: none;
    background-color: gtkopacity($inverted_dark_color, 0.9);
    box-shadow: $z-depth-1;

    &:not(.infopanel) { border-radius: 0 0 2px 0; }
    &:not(.audiopanel) { border-radius: 0 0 0 2px; }
  }

  .notificationwidget,
  .powerwidget {
    padding: 6px;
    color: $inverted_fg_color;
    background-color: transparent;
    font-size: 100%;
    font-weight: 500;
  }

  .auth-message {
    color: $error_color;
    font-size: 90%;
    font-weight: 700;
  }

  .caps-message {
    color: $warning_color;
    font-size: 90%;
    font-weight: 700;
  }

  .framedimage { // avatar?
    min-height: 150px;
    border-radius: 2px;
    border: none;
    background-color: gtkopacity($inverted_fg_color, 0.1);
  }

  .passwordentry {
    @include entry(flat-normal);
    border-radius: 0;
    color: $inverted_secondary_fg_color;
    caret-color: $inverted_secondary_fg_color;
    font-family: monospace;
    &:focus {
      @include entry(flat-focus);
      color: $inverted_fg_color;
      caret-color: $inverted_fg_color;
    }
    &:disabled {
      @include entry(flat-insensitive);
      color: $insensitive_inverted_fg_color;
    }
    &:backdrop { // for alt-text keyboard layout?
      color: $selected_bg_color;
    }

    image.left {
      margin-right: 8px;
      color: inherit;
    }
  }

  .transparentbutton { // = 'unlock'/'switch-user' button
    @extend %button_flat_normal;
    border: none;
    background-color: transparent;
    &:not(:active):not(:disabled):not(hover) {
      background-color: transparent;
      color: $secondary_accent_color;
    }
    &:hover {
      @extend %button_flat_hover;
      background-color: transparent;
      color: $accent_color;
    }
    &:active {
      @extend %button_flat_active;
      border-image: none;
      background-color: transparent;
      color: $accent_color;
      box-shadow: none;
    }
    &:checked {
      @extend %button_flat_checked;
      border-image: none;
      background-color: transparent;
      color: $accent_color;
      box-shadow: none;
    }
    &:disabled {
      @extend %button_flat_disabled;
      background-color: gtkopacity($inverted_secondary_fg_color, 0.1);
      color: gtkopacity($inverted_secondary_fg_color, 0.4);

      label,
      image { color: inherit; }
    }
  }

  .volumeslider {
    min-height: 24px;
    min-width: 100px;
    padding: 3px 0px;
    background-color: gtkopacity($inverted_fg_color, 0.2);
    color: $success_color;
    &:disabled { background-color: gtkopacity($success_color, 0.2); }

    // slider { // FIXME: what's this?
    //   min-height: 24px;
    //   min-width: 4px;
    //   margin: -9px;
    // }
  }

  .trackname {
    font-size: 90%;
    color: $inverted_secondary_fg_color;
    background-image: none;
    background-color: transparent;
  }

  .albumartist {
    font-size: 80%;
    color: $insensitive_inverted_fg_color;
    background-image: none;
    background-color: transparent;
  }

  viewport {
    &,
    &.frame {
      border-style: none;
      background-color: transparent;
      background-image: none;
    }
  }
}


// /*********
//  * XFce4 *
//  *********/

.XfceHeading { // FIXME: I'm not sure what's this
  margin: 0;
  padding: 0;
  border-width: 0;
  background-image: none;
  background-color: $base_color;
  color: $fg_color;
  text-shadow: none;
}

.xfce4-panel,
.xfce4-panel.background {
  &, // unset borders
  frame > border { border: 0 none transparent; }

  background-color: $panel_bg_color;
  color: $inverted_fg_color;
  font-weight: 700;
  text-shadow: none;
  -gtk-icon-shadow: none;

  // dashed outline indicator?
  // default -> 1px dashed #ff0000;
  &.marching-ants { border: 1px dashed $destructive_color; }

  button {
    padding: 0 4px;
    border: none;
    border-radius: 0;
    background-color: transparent;
    background-image: none;
    color: $inverted_fg_color;
    font-weight: 700;
    transition: none;
    &:hover {
      background-color: transparent;
      background-image: none;
      color: $selected_fg_color;
      box-shadow: inset 0 -2px $track_color;
      transition: none;
    }
    &:active,
    &:checked,
    &:hover:checked,
    &:disabled:checked { // 'checked' = 'active'
      background-color: transparent;
      background-image: none;
      color: $selected_fg_color;
      box-shadow: inset 0 -2px $selected_bg_color;
      transition: none;
      animation: none;
    }
  }

  menu {
    font-weight: 400; // for enforcing regular weight
    text-shadow: none;
    -gtk-icon-effect: none;
  }
}

TopMenuAppMenuBar {
  background-color: $panel_bg_color; // do not use transparent
  color: $inverted_fg_color;
  box-shadow: none;

  > menuitem {
    color: $inverted_fg_color;
    background-color: transparent;
    &:hover {
      color: $selected_fg_color;
      box-shadow: inset 0 -2px $selected_bg_color;
      transition: none;
    }
  }
}


// /**************
//  * FeedReader *
//  **************/

window.background > paned.titlebar > headerbar.titlebar {
  button.flat {
    // FIXME: when developer will use .image-button class?
    &:not(.titlebutton):not(.image-button):not(.text-button):not(.toggle) {
      min-width: $icon_size - 2px;
      min-height: $icon_size - 2px;
      margin: rem(5.3px + 2px) 0;
      padding: 0 rem(($widget_size - $icon_size - 2px) / 2);
    }
  }

  // prevent filled allocation
  spinner.feedlist-spinner { padding: rem(12px) 0; }
}

// hide unneeded spinner
overlay.article-list > stack > box.horizontal {
  spinner {
    &,
    &:checked,
    &:checked:disabled,
    &:checked:backdrop {
      opacity: 0; // makes no sense here
    }
  }
}


// /************
//  * Synaptic *
//  ************/

window > box.vertical > box.horizontal {
  > toolbar {
    background-color: transparent;
    box-shadow: none;

    toolitem > box {
      label,
      entry {
        min-height: rem(13.3px);
        padding-top: rem(1.3px);
        padding-bottom: rem(1.3px);
        font-size: 90%;
      }

      > label { color: $insensitive_fg_color; }
    }
  }

  > widget { background-color: transparent; }
}


// /**********************
//  * Eclipse/SWT (neon) *
//  **********************/

window.background > box.vertical {
  > menubar { // force setting foreground colour
    color: $inverted_secondary_fg_color;
  }

  > scrolledwindow widget > toolbar { // remove inline-shadows
    box-shadow: none;
  }
}


// /*************
//  * Gnome-Mpv *
//  *************/

// control-bar styling
.background.csd > box.vertical > box.background.horizontal,
.background.solid-csd > box.vertical > box.background.horizontal {
  padding: rem(2.7px);

  button {
    min-width: if($ref_weight < 1.0, $icon_size * 1.8,
                                     $widget_size);
    min-height: if($ref_weight < 1.0, $icon_size * 1.8,
                                      $widget_size);
    margin-left: rem(2.7px);
    margin-right: rem(2.7px);
    padding: 0;
  }

  scale {
    margin-left: rem(2.7px);
    margin-right: rem(2.7px);
  }

  scale > value.bottom { color: $fg_color; } // use standard foreground-colour

  // stop using 'with-marks' sliders
  scale contents > trough > slider {
    min-height: rem(20px, $sw: 1.0);
    min-width: rem(20px, $sw: 1.0);
    margin: rem(-9px - 0.5px, $sw: 1.0);
    background-repeat: no-repeat;
    background-position: center;
    &:not(:hover):not(:active) { background-size: $scale; }

    @if $variant==light {
      background-image: -gtk-scaled(url('assets/slider.png'),
                                    url('assets/slider@2.png'));
      &:hover {
        margin: rem(-9px - 0.5px, $sw: 1.0);
        background-image: -gtk-scaled(url('assets/slider.png'),
                                      url('assets/slider@2.png'));
        background-size: 100%;
      }
      &:active {
        margin: rem(-9px - 0.5px, $sw: 1.0);
        background-image: -gtk-scaled(url('assets/slider-active.png'),
                                      url('assets/slider-active@2.png'));
      }
      &:disabled {
        background-image: -gtk-scaled(url('assets/slider-insensitive.png'),
                                      url('assets/slider-insensitive@2.png'));
      }
    }

    @else {
      background-image: -gtk-scaled(url('assets/slider-dark.png'),
                                    url('assets/slider-dark@2.png'));
      &:hover {
        margin: rem(-9px - 0.5px, $sw: 1.0);
        background-image: -gtk-scaled(url('assets/slider-dark.png'),
                                      url('assets/slider-dark@2.png'));
        background-size: 100%;
      }
      &:active {
        margin: rem(-9px - 0.5px, $sw: 1.0);
        background-image: -gtk-scaled(url('assets/slider-active-dark.png'),
                                      url('assets/slider-active-dark@2.png'));
      }
      &:disabled {
        background-image: -gtk-scaled(url('assets/slider-insensitive-dark.png'),
                                      url('assets/slider-insensitive-dark@2.png'));
      }
    }
  }
}


// /***********
//  * Firefox *
//  ***********/

// FIXME: Gtk+3 firefox needs this!
window.background:not(.csd):not(.solid-csd) {
  > widget > menubar {
    color: $inverted_secondary_fg_color;
    &:hover {
      // underline-indicator doesn't work at all...
      color: $inverted_fg_color;
    }
    &:disabled { color: $insensitive_inverted_fg_color; }
  }

  > menu { // needs to override?
    > menuitem > label:disabled { color: $insensitive_fg_color; }
  }

  // revert to standard separators
  > window.background > menu separator { color: $borders_color; }

  > widget {
    > frame,
    > separator { color: $borders_color; }

    > button > button:not(.flat) {
      // enforce fallback buttons inside the HTML pages
      @extend %button_fallback_normal;
      &:hover { @extend %button_fallback_hover; }
      &:active,
      &:checked { @extend %button_fallback_active; }
      &:disabled { @extend %button_fallback_insensitive; }
      &:checked:disabled {
        @extend %button_fallback_checked_insensitive;
      }
    }

    > entry, // 53.x
    > entry > entry { // 52.x or lower
      // enforce fallback entries inside the HTML pages
      @extend %entry_fallback_normal;
      border-radius: 2px;
      &:focus { @extend %entry_fallback_focus; }
      &:disabled { @extend %entry_fallback_insensitive; }
    }
  }
}


// /*************
//  * Wireshark *
//  *************/

window.background {
  > box.vertical > toolbar:not(.primary-toolbar).horizontal {
    border-bottom: 1px solid $borders_color;
    box-shadow: none; // hide fake-shadows
  }

  paned > notebook > stack > scrolledwindow.frame > widget.view {
    // transition causes missing 'selected-items'
    background-image: none;
    transition: none;
    animation: none;
  }
}

// Brisk-Menu applet
.mate-panel-menu-bar button.flat.toggle.brisk-button {
  padding: 0 rem(4px, $sw: 1.0);
  border-radius: 0;
  -gtk-outline-radius: 0;
  background-image: none;
  background-color: transparent;
  color: $inverted_secondary_fg_color;
  font-weight: 700;
  &:hover {
    background-image: none;
    color: $inverted_fg_color;
    box-shadow: inset 0 -2px $track_color;
  }
  &:active { animation: none; }
  &:checked {
    background-image: none;
    color: $inverted_fg_color;
    box-shadow: inset 0 -2px $selected_bg_color;
  }
}

.brisk-menu {
  .categories-list { // left-pane
    button.flat {
      padding-top: unset;
      padding-bottom: unset;
      border-radius: 0; // remove roundness
      -gtk-outline-radius: 0;
      font-weight: 500;
      transition-duration: 0.1s; // shorter duration
      // almost covers :hover pseudo-class
      &:checked {
        background-color: transparent;
        color: $selected_bg_color;
      }

      image { padding: rem(8px) 0; }
      // for finer base-lines
      label { padding-bottom: rem(0.7px); }
    }
  }

  // hide separator above session-buttons
  box.vertical > box.horizontal > box.vertical > separator.horizontal {
    min-height: 0;
    background-color: transparent;
  }

  .brisk-button { // what's this?
  }

  .apps-list { // right-pane
    background-color: $base_color;

    row.activatable > button.flat {
      padding-top: unset;
      padding-bottom: unset;
      border-radius: 0; // remove roundness
      -gtk-outline-radius: 0;
      font-weight: 400;
      transition: none; // needs quicker response

      // set vertical padding with icon's padding
      > box.horizontal > image { padding: rem(5.3px) 0; }
    }
  }
}


// /**************
//  * Mate-Panel *
//  **************/

// Most parts are themed in Gnome-panel section
#PanelWidget,
#PanelPlug,
#PanelApplet,
PanelToplevel.background {
  // Always use dark-color of dark variant
  color: $inverted_secondary_fg_color;
  background-color: $panel_bg_color;
  box-shadow: none;
}

PanelSeparator {
  border-width: 0;
  background: none;
  background-image: none;
}

.mate-panel-menu-bar menubar,
#PanelApplet-window-menu-applet-button {
  background-color: transparent;

  // same value with Gnome-panel
  > menuitem { padding: 0 rem(4px, $sw: 1.0); }
}


// /*****************
//  * Mate-Terminal *
//  *****************/

.mate-terminal {
  // &.background,
  // vte-terminal {
  //   background-color: $inverted_dark_color;
  //   color: $inverted_fg_color;
  // }

  notebook > header.top { // show drop-shadows
    background-color: $inverted_bg_color;
    box-shadow: inset 0 2px 2px -3px rgba(0, 0, 0, 0.26),
                inset 0 5px 3px -5px rgba(0, 0, 0, 0.39),
                inset 0 -1px $borders_color;

    tab.reorderable-page {
      &:hover {
        background-color: $inverted_base_color;
        box-shadow: inset 0 2px 2px -3px rgba(0, 0, 0, 0.26),
                    inset 0 5px 3px -5px rgba(0, 0, 0, 0.39),
                    inset 0 -1px $borders_color;
      }
      &:checked {
        background-color: $inverted_base_color;
        box-shadow: -1px 0 2px rgba(0, 0, 0, 0.02),
                    -1px 0 4px rgba(0, 0, 0, 0.03),
                    1px 0 2px rgba(0, 0, 0, 0.02),
                    1px 0 4px rgba(0, 0, 0, 0.03),
                    inset 0 2px 2px -3px rgba(0, 0, 0, 0.26),
                    inset 0 5px 3px -5px rgba(0, 0, 0, 0.39),
                    inset 0 -1px $borders_color;
      }
    }

    tab {
      label { color: $inverted_tertiary_fg_color; }
      &:hover label,
      &:checked label { color: $inverted_fg_color; }

      button {
        &,
        image { color: $inverted_tertiary_fg_color; }
      }

      &:hover button,    // hover tab close button
      &:checked button { // active tab close button
        &,
        image { color: $inverted_fg_color; }
      }
    }

    tabs > arrow {
      color: $inverted_tertiary_fg_color;
      &:hover,
      &:active { color: $inverted_fg_color; }
      &:disabled { color: $insensitive_inverted_secondary_fg_color; }
    }
  }

  scrollbar {
    background-color: $inverted_dark_color;
    // border: 1px none transparent;

    slider { // always use dark variant
      background-color: gtkopacity($inverted_tertiary_fg_color, 0.55);
      &:hover { background-color: gtkopacity($inverted_secondary_fg_color, 0.55); }
      &:active { background-color: $inverted_fg_color; }
      &:disabled { opacity: 0.4; }
    }
  }
}


// /********
//  * Caja *
//  ********/

.caja-desktop { // desktop icon-grid styling
  &.caja-canvas-item { @extend .nautilus-desktop.nautilus-canvas-item; }

  > widget.entry { // = EelEditableLabel.entry
    &, &:focus {
      transition: none;

      &:selected { // FIXME: selection node doesn't work?
        color: $selected_fg_color;
        background-color: $selected_bg_color;
      }
    }
  }
}

.caja-navigation-window {
  // side-panel styling
  .caja-side-pane {
    scrolledwindow {
      background-color: $secondary_dark_color;
      &:dir(ltr) {
        box-shadow: if($variant == 'light', $sidebar-light-ltr,
                                            $sidebar-dark-ltr);
      }
      &:dir(rtl) {
        box-shadow: if($variant == 'light', $sidebar-light-rtl,
                                            $sidebar-dark-rtl);
      }

      treeview.view {
        background-color: transparent;
        // font-weight: 500;
        &:selected {
          background-color: $selected_bg_color;
          color: $selected_fg_color;
        }
      }
    }

    notebook {
      border-top: 1px solid $borders_color;

      .frame { border: none; }
    }

    button.flat:last-child { // 'close' button on header
      min-width: $icon_size;
      min-height: $icon_size;
      padding: rem(10.7px);
      border-radius: 100px;
      -gtk-outline-radius: 100px;
    }
  }

  // main toolbar styling
  toolbar.primary-toolbar {
    border-bottom: 1px solid $borders_color;
    box-shadow: if($variant == 'light', $toolbar-shadow-light,
                                        $toolbar-shadow-dark);

    button { // uniform button sizes
      min-width: $icon_size * 1.5;
      min-height: $icon_size * 1.5;
      padding: rem(4px);
    }
  }

  // path-bar styling
  .caja-pathbar {
    button {
      &:first-child { // remove meaningless gaps
        &:dir(ltr) { margin-right: -2px; }
        &:dir(rtl) { margin-left: -2px; }
      }
      &:not(:first-child):not(:last-child) {
        margin: 0 -2px;
      }
      &:last-child {
        &:dir(ltr) { margin-left: -2px; }
        &:dir(rtl) { margin-right: -2px; }
      }

      &, &.slider-button { // use linked-array button styling
        @include button(flat-normal);
        @extend %button_array;
        &:hover {
          @include button(flat-hover);
          @extend %button_array:hover;
        }
        &:active {
          @include button(flat-active);
          @extend %button_array:active;
        }
        &:disabled {
          @include button(flat-insensitive);
          @extend %button_array:disabled;
        }
        &:checked {
          @include button(flat-checked);
          @extend %button_array:checked;
        }
      }
    }
  }

  button.image-button.toggle { // most-left toggle button in path-bar pane
    @include button(flat-normal);
    @extend %image_button;
    &:hover { @include button(flat-hover); }
    &:active { @include button(flat-active); }
    &:disabled { @include button(flat-insensitive); }
    &:checked { // use underline-indicator
      @include button(flat-checked);
      border-radius: 0;
      -gtk-outline-radius: 0;
      background-image: none;
      background-color: transparent;
      box-shadow: inset 0 -2px $selected_bg_color;
    }
  }

  .caja-notebook { // remove lateral borders
    &, .frame {
      border-width: 1px 0 1px;
    }

    > header.top { // revive top-border when tabs are shown
      border-top: 1px solid $borders_color;
      background-color: $secondary_dark_color;
      box-shadow: if($variant == 'light', $inline-shadow-light,
                                          $inline-shadow-dark);
    }
  }

  statusbar {
    margin: 0 -10px; // hide weird lateral gaps
    padding: 0 rem(6.7px);
    background-color: $secondary_dark_color;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);
  }

  // workaround for invisible text in rename entry
  scrolledwindow widget > widget.entry {
    &, &:focus {
      transition: none;

      &:selected { // FIXME: selection node doesn't work?
        color: $selected_fg_color;
        background-color: $selected_bg_color;
      }
    }
  }
}

#caja-extra-view-widget {
  border-bottom: 1px solid $borders_color;
  background-color: $bg_color; // needs overriding

  > box > box > label { font-weight: 700; }
}


// /********************
//  * Mate-Screensaver *
//  ********************/

.lock-dialog {
  @extend messagedialog;
  border-radius: 2px;
  border: 1px solid gtkopacity($inverted_dark_color, 0.9);
  background-color: transparent;
  // outset-shadow does not work since decoration node wasn't implemented
  box-shadow: none;

  &.background {
    border-radius: 2px;
    background-color: gtkopacity($inverted_dark_color, 0.9);
  }

  frame { border: none; }
}


// /***********************
//  * Mate-Control-Center *
//  ***********************/

// almost out of control, and looks ugly
window#MyControlCenter > frame > box.horizontal {
  > widget > scrolledwindow.frame {
    border: none;
    // draw pane-separator with borders
    // FIXME: rendering quality is quite poor
    &:dir(ltr) { border-left: 1px solid $solid_light_borders_color; }
    &:dir(rtl) { border-right: 1px solid $solid_light_borders_color; }

    > widget.view { // content-view
      all: unset;
      background-color: $bg_color; // does not work
    }
  }
}


// /**************
//  * Mate-Tweak *
//  **************/

.background:not(.csd) > box.horizontal {
  > notebook { // right-pane
    // remove unwanted frames/borders
    border: none;
    box-shadow: none;
  }
}


// /*******
//  * Eom *
//  *******/

.eom-window {
  statusbar { // always use dark-variant
    margin: 0 -10px; // hide weird lateral gaps
    padding: 0 rem(6.7px);
    background-color: $inverted_bg_color;
    color: $inverted_fg_color;
    box-shadow: $inline-shadow-dark;
  }

  // toolbar.horizontal { // when will devs implement symbolic-icons?
  //   background-color: $inverted_bg_color;
  //   color: $inverted_secondary_fg_color;
  //   box-shadow: $toolbar-shadow-dark;

  //   button {
  //     background-color: transparent;
  //     color: $inverted_secondary_fg_color;
  //     &:hover,
  //     &:active,
  //     &:checked { color: $inverted_fg_color; }
  //     &:disabled { color: $insensitive_inverted_fg_color; }
  //   }
  // }
}


// /*********
//  * Pluma *
//  *********/

.pluma-window {
  paned.horizontal notebook {
    > header.top { // revive top-border when tabs are shown
      border-top: 1px solid $borders_color;
      background-color: $secondary_dark_color;
      box-shadow: if($variant == 'light', $inline-shadow-light,
                                          $inline-shadow-dark);
    }
  }

  statusbar {
    margin: 0 -10px; // hide weird lateral gaps
    padding: 0 rem(6.7px);
    background-color: $secondary_dark_color;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);

    frame,
    .frame { border-style: none; }
  }

  // side-pane styling
  paned.horizontal box.vertical notebook {
    &.frame { border-style: solid none; }
  }

  // print-preview styling
  .pluma-print-preview toolbar.horizontal {
    border-width: 1px 0;
    border-style: solid none;
    border-color: $borders_color transparent;
    background-color: $secondary_dark_color;
    box-shadow: if($variant == 'light', $inline-shadow-light,
                                        $inline-shadow-dark);
  }
}


// /*****************
//  * Atril/Xreader *
//  *****************/

.atril-window,
.xreader-window {
  scrolledwindow.frame {
    border-style: solid none none;

    > .view { // = evview?
      transition: none;
      &:selected,
      &:active {
        background-color: $selected_bg_color;
        color: $selected_fg_color;
      }
    }
  }
}


// /****************
//  * Libre-Office *
//  ****************/

window.background:not(.csd):not(.solid-csd) {
  // reserved area at the most-right side of GtkMenuBar
  > grid.horizontal > grid.horizontal {
    background-color: $inverted_dark_color;

    > button.flat.small-button { // 'close' button
      color: $inverted_secondary_fg_color;
      &:hover,
      &:active,
      &:checked { color: $inverted_fg_color; }
      &:disabled { color: $insensitive_inverted_fg_color; }
    }
  }

  // for 'Notebookbar' toolbar
  > notebook:not(.frame) {
    border: 0 none transparent; // unset borders
    background-color: $bg_color;

    > stack {
      border: none;
      background-color: $bg_color;
      box-shadow: none;
    }

    > header.top {
      border: 0 none transparent; // unset borders
      background-color: $bg_color;
      box-shadow: $toolbar-shadow-light,
                  inset 0 -1px $borders_color;
      @if $variant = 'dark' {
        box-shadow: $toolbar-shadow-dark,
                    inset 0 -1px $borders_color;
      }

      tabs {
        &, > tab {
          background-color: transparent;

          &, // FIXME: this does not work
          label,
          image { color: $tertiary_fg_color; }

          &:checked {
            &,
            label,
            image { color: $fg_color; }
          }
          &:not(:checked) {
            &,
            label,
            image { color: $tertiary_fg_color; }
          }
        }
      }
    }
  }
}


// /*************************
//  * Mate-MediaControl-OSD *
//  *************************/

// OSDs are much blurred?
MsdOsdWindow {
  &.background.osd {
    border-radius: 2px;
    border: 1px solid gtkopacity($inverted_dark_color, 0.9);
    background-color: gtkopacity($inverted_dark_color, 0.9);
    box-shadow: none;

    // FIXME: seems images have inverted fore/back colours?
    image { color: $inverted_fg_color; }

    .trough {
      border-radius: 0;
      border: none;
      background-color: gtkopacity($inverted_fg_color, 0.2);
    }

    .progressbar {
      border-radius: 0;
      border: none;
      background-color: $success_color;
    }
  }
}


// /************
//  * Inkscape *
//  ************/

// 2nd-row toolbars
#SelectToolbar,
#Kludge {
  border-top: 1px solid $borders_color;
  box-shadow: none;
}

// left/right-side, vertical toolbars
#SnapToolbar,
#ToolToolbar {
  > button,
  > toolitem > button,
  > toolbutton > button { // revert to rectangular buttons
    border-radius: 2px;
    -gtk-outline-radius: 2px;
    &:checked { // revert to Gtk+ 2.x styling
      border-image: none;
      background-color: $selected_bg_color;
      color: $selected_fg_color;
    }
  }
}

// scrolled colour-palette
#PreviewHolderScroller > viewport.frame {
  padding: 1px 0;
  border-style: solid none; // add fake border to top/bottom
  border-width: 1px 0;
  border-color: transparent;
}

// misc
spinbutton#ZoomStatus,
box#SelectedStyle spinbutton { // spinbuttons inside the status-bar
  > button {
    min-width: rem($widget_size, $sw: 1.0);
    min-height: rem($widget_size, $sw: 1.0);
    padding: 0;
  }
}

#InkscapePanel spinbutton > entry {
  // workaround for truncated labels in GimpSpinScale
  // FIXME: need to override weird inner-padding?
  margin: if($ref_weight < 1.0, rem(-2.7px) 0,
                                rem(-4px) 0);

  // re-fit to the parent entry node spacing
  > progress {
    margin: if($ref_weight < 1.0, rem(-2.7px) 0,
                                  rem(-4px) 0);
  }
}


// /**************
//  * Emacs24/25 *
//  **************/

window#Emacs24,
window#Emacs {
  background-color: $bg_color;
  transition: none;

  > box#pane {
    background-color: $bg_color;

    > widget > toolbar#emacs-toolbar {
      background-color: $bg_color;
      transition: none;
    }

    > box > widget#emacs,
    > box > widget#emacs24,
    > box > widget#emacs25 {
     transition: none;

      > widget > scrollbar,
      > widget > scrollbar trough {
        background-color: $bg_color;
        transition: none;
      }
    }
  }
}


// /************
//  * Electron *
//  ************/

// workaround for the context-menus in Electron apps
// do not use the alpha-blended colours
window.popup:not(.csd) {
  menu {
    background-color: $secondary_base_color;

    menuitem {
      background-color: $secondary_base_color;
      color: mix($fg_color, $secondary_base_color, 75%);
      &:hover {
        background-color: mix($fg_color, $secondary_base_color, 10%);
        color: $fg_color;
      }
      &:disabled { // popup frame pulls this fg colours?
        background-color: $secondary_base_color;
        color: mix($fixed_fg_color, $secondary_base_color, 30%);

        label, // reset for generic non-composited Gtk+ apps
        arrow { color: mix($fg_color, $secondary_base_color, 30%); }
      }
    }
  }
}


// /********************
//  * Transmission-Gtk *
//  ********************/

window.background:not(.csd):not(.solid-csd) > box.vertical > grid.horizontal {
  > button.flat:not(.image-button),
  > button.flat.image-button.toggle {
    // set min-limits for rectangular images
    > image,
    > widget > box.horizontal > image {
      min-width: 20px;
      min-height: 20px;
    }
  }

  // add spacing for 'Ratio' label
  > label { padding: 0 rem(5.3px, $sw: 1.0) rem(1.3px, $sw: 1.0); }
}


// /**************************
//  * Remmina Remote Desktop *
//  **************************/

window.background:not(.csd):not(.ssd):not(.solid-csd) {
  // inline headerbar
  > box.vertical > headerbar:not(.titlebar) {
    > box.horizontal {
      > entry,
      > entry.default { // .default is added when focused only? crazy...
        // always use inverted colours
        color: $inverted_secondary_fg_color;
        caret-color: $inverted_secondary_fg_color;
        &:focus {
          color: $inverted_fg_color;
          caret-color: $inverted_fg_color;
        }
        &:disabled { color: $insensitive_inverted_secondary_fg_color; }
      }

      // hide unneeded separator
      > separator { background-color: transparent; }
    }
  }
}


// /***********
//  * Synapse *
//  ***********/

window.background:not(.csd):not(.ssd):not(.solid-csd) > box.vertical {
  > widget widget,
  > box.vertical widget {
    &:selected { // selected-row?
      color: $selected_fg_color;
      background-color: $selected_bg_color;
    }
  }
}


// /*******************
//  * MySQL-Workbench *
//  *******************/

window#wb_main_window {
  notebook#model_tabs {
    > header.top {
      background-color: $inverted_dark_color;

      tabs {
        arrow {
          color: $inverted_tertiary_fg_color;
          &:hover,
          &:active { color: $inverted_fg_color; }
          &:disabled { color: transparent; }
        }

        tab {
          &,
          label,
          button.flat { color: $inverted_tertiary_fg_color; }

          &:hover,
          &:checked {
            &,
            label,
            button.flat { color: $inverted_fg_color; }

            > image { background-color: $inverted_fg_color; }
          }
          &:disabled {
            &,
            label,
            button.flat { color: $insensitive_inverted_fg_color; }
          }

          > image { // 'Home' icon
            min-height: $icon_size;
            min-width: $icon_size;
            padding: rem(4px, $sw: 1.0);
            border-radius: 2px;
            background-color: $inverted_tertiary_fg_color;
          }
        }
      }
    }

    > stack > box.vertical > menubar { margin: 0 -1px; } // hide weird gap
  }

  box#dbquery,
  box#db.query.QueryBuffer,
  paned.vertical > box.horizontal > box.vertical > box.horizontal,
  notebook#model_tabs > stack > box.vertical > box.horizontal {
    border-bottom: 1px solid $borders_color;
  }

  button.flat.image-button { // revert to square
    margin: rem(5.3px) 0; // add vertical spacing
    border-radius: 2px;
    -gtk-outline-radius: 2px;
    &.toggle:checked {
      border-image: -gtk-gradient(radial,
                                  center bottom, 0,
                                  center bottom, 0.5,
                                  to($selected_bg_color),
                                  to(transparent))
                                  0 0 2 / 0 0 2px;
      background-color: transparent;
    }
  }

  box.horizontal > combobox { margin: rem(5.3px) 0; } // add vertical spacing

  entry#find { margin: rem(5.3px) 0; } // add vertical spacing

  treeview.view {
    background-color: $base_color;
    transition: none;
    &:selected { // enforce standard selection styling
      &, &:focus { @extend %selected_items; }
    }
  }
}


// /***************
//  * Chrome(ium) *
//  ***************/

window.background:not(.csd):not(.solid-csd) {
  > toolbar:not(.primary-toolbar) > entry, // ver.59.0.3053 or lower
  > entry { // ver.59.0.3067 or higher
    &, &:focus { // overrides standard borders
      border-image: none;
      border: 1px solid $borders_color;
    }
  }

  // internal region of toolbar's entry widget
  > textview.view { background-color: $light_color; }

  // ver.59.0.3067 or higher
  // override default @theme_bg_color in their own tooltip widgets
  > tooltip:not(.background):not(.csd) {
    border-radius: 0; // roundness does not work
    // RGBA does not work, use solid colours instead
    background-color: $inverted_dark_color;
    color: $inverted_fg_color;
  }
}
